name: Release Draft

on:
  push:
    branches:
      - main
  # pull_request event is required only for autolabeler
  pull_request:

jobs:
  update_release_draft:
    name: Generate release draft
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.release-drafter.outputs.tag_name }}
    steps:
      - id: release-drafter
        uses: release-drafter/release-drafter@fe52e97d262833ae07d05efaf1a239df3f1b5cd4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_zip:
    name: Build plugin zip
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Configure Composer cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --optimize-autoloader  --no-suggest --no-progress --no-interaction

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Configure npm cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install Node dependencies
        run: npm ci
        env:
          CI: true

      - name: Build plugin zip
        run: npm run build

      - name: Upload build as artifact
        # Don't run for PRs.
        if: ${{ github.head_ref == null }}
        uses: actions/upload-artifact@v3
        with:
          name: zip-${{ github.sha }}
          path: amp-qa-tester.zip

  upload_assets:
    name: Upload release assets
    # Don't run for PRs.
    if: ${{ github.head_ref == null }}
    runs-on: ubuntu-latest
    needs:
      - update_release_draft
      - build_zip
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download plugin zip
        uses: actions/download-artifact@v2
        with:
          name: zip-${{ github.sha }}

      - name: Upload plugin zip to release draft
        run: gh release upload ${{ env.TAG_NAME }} amp-qa-tester.zip --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ needs.update_release_draft.outputs.tag_name }}
